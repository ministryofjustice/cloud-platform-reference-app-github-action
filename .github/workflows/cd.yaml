name: Continuous Deployment

on:
  workflow_dispatch:
    branches:
      - 'main'

env:
  KUBE_NAMESPACE: ${{ secrets.KUBE_NAMESPACE }}

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: docker build -t github-action-reference-app .

      - name: Push to ECR
        id: ecr
        uses: jwalton/gh-ecr-push@v1
        with:
          access-key-id: ${{ secrets.ECR_AWS_ACCESS_KEY_ID }}
          secret-access-key: ${{ secrets.ECR_AWS_SECRET_ACCESS_KEY }}
          region: eu-west-2
          local-image: github-action-reference-app
          image: ${{ secrets.ECR_NAME }}:${{ github.sha }}
      - name: Update image tag for live-1
        env:
          ECR_URL: ${{ secrets.ECR_URL }}
        run: |
          export IMAGE_TAG=${{ github.sha }} && cat ./deploy/helm/live-1.values.tpl | envsubst > ./deploy/helm/live-1.values.yaml
      - name: Authenticate to the live-1 cluster
        env:
          KUBE_CLUSTER_LIVE_1: ${{ secrets.KUBE_CLUSTER_LIVE_1 }}
          KUBE_CERT_LIVE_1: ${{ secrets.KUBE_CERT_LIVE_1 }}
          KUBE_TOKEN_LIVE_1: ${{ secrets.KUBE_TOKEN_LIVE_1 }}
        run: |
          echo "${{ secrets.KUBE_CERT_LIVE_1 }}" > ca.crt
          kubectl config set-cluster ${KUBE_CLUSTER_LIVE_1} --certificate-authority=./ca.crt --server=https://api.${KUBE_CLUSTER_LIVE_1}
          kubectl config set-credentials deploy-user --token=${{ secrets.KUBE_TOKEN_LIVE_1 }}
          kubectl config set-context ${KUBE_CLUSTER_LIVE_1} --cluster=${KUBE_CLUSTER_LIVE_1} --user=deploy-user --namespace=${{ secrets.KUBE_NAMESPACE }}
          kubectl config get-contexts
          kubectl config use-context ${KUBE_CLUSTER_LIVE_1}
      - name: Apply the updated Helm chart in live-1
        run: |
          cd deploy/helm/
          helm upgrade githubaction . \
          --values live-1.values.yaml \
          --namespace ${{ secrets.KUBE_NAMESPACE }}
      - name: Update image tag for eks-live
        env:
          ECR_URL: ${{ secrets.ECR_URL }}
        run: |
          export IMAGE_TAG=${{ github.sha }} && cat ./deploy/helm/live.values.tpl | envsubst > ./deploy/helm/live.values.yaml
      - name: Authenticate to the eks-live cluster
        env:
          KUBE_CLUSTER: ${{ secrets.KUBE_CLUSTER }}
        run: |
          echo "${KUBE_CERT}" > ca.crt
          kubectl config set-cluster ${KUBE_CLUSTER} --certificate-authority=./ca.crt --server=https://${KUBE_CLUSTER}
          kubectl config set-credentials deploy-user --token=${KUBE_TOKEN}
          kubectl config set-context ${KUBE_CLUSTER} --cluster=${KUBE_CLUSTER} --user=deploy-user --namespace=${{ secrets.KUBE_NAMESPACE_LIVE }}
          kubectl config get-contexts
          kubectl config use-context ${KUBE_CLUSTER}
      - name: Apply the updated Helm chart in eks-live
        run: |
          cd deploy/helm/
          helm upgrade githubaction . \
          --values live.values.yaml \
          --namespace ${{ secrets.KUBE_NAMESPACE }}

